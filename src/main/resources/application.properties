#server.port=8080

spring.datasource.url=jdbc:mysql://localhost:3306/psw
spring.datasource.username=root
spring.datasource.password=alessandro
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.main.allow-bean-definition-overriding=true


#spring.jackson.serialization.fail-on-empty-beans=false

#spring.main.allow-bean-definition-overriding=true

#ricorda che l'accesso nell'administrator console di keycloack è admin admin
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.realm=psw-realm
clientid=psw-admin-client
#clientsecret=bf2ecb27-7fc2-40fd-a848-058bb0161ad2
usernameadmin=admin@gmail.com
passwordadmin=admin
keycloak.resource=psw-admin-client
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/auth/realms/psw-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/auth/realms/psw-realm/protocol/openid-connect/certs


#questo certificato va nel keychain di macOS ma poi chrome non apre nulla
#server.ssl.key-store=classpath:localhost.p12
#server.ssl.key-store-password=changeit
#server.ssl.key-store-type=PKCS12


#server.ssl.key-store=classpath:springboot.jks
#server.ssl.key-store-password=password
#server.ssl.key-store-type=JKS
#server.ssl.key-alias=springboot
#server.ssl.key-password=password

server.port=8443